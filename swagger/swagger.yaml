swagger: "2.0"
info:
  version: "1.0"
  title: Team Superman Newsletter
# during dev, should point to your local machine
host: newsletter.microapi.dev
# basePath prefixes all resource paths 
basePath: /
# Tags for api
tags:
  - name: "Subscription"
    description: "Everything about subscription"
  - name: "Emailing"
    description: "Everything about using the Emailing api"
  - name: "NewsComposition"
    description: "Everything about composing newsletters"
  - name: "NewsPage"
    description: "Everything about viewing all the newsletters"
# Http schemes
schemes:
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /subscription/api/v1/subscription/subscribe:
    post:
      tags:
        - "Subscription"
      description: to subscribe to list
      parameters:
        - name: email
          in: query
          description: Email to subscribe
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessRespons"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /subscription/api/v1/subscription/unsubscribe:
    patch:
      tags:
        - "Subscription"
      description: to unsubscribe email to list
      parameters:
        - name: email
          in: query
          description: Email to unsubscribe
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessRespons"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /subscription/api/v1/subscription:
    get:
      tags:
        - "Subscription"
      description: get all subscriptions
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponsArray"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /subscription/api/v1/subscription/active:
    get:
      tags:
        - "Subscription"
      description: get all active subscriptions
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponsArray"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /emailing/sendemail:
    post:
      tags:
        - "Emailing"
      description: Sends out newsletter as email to all subscribers
      parameters:
        - name: name
          in: query
          description: Name of the newsletter author
          required: true
          type: string
        - name: content
          in: query
          description: The newsletter being sent
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SendEmailResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/SendEmailError"
  /compose:
    get:
      tags:
        - "NewsComposition"
      description: Returns the news composition frontend page
      responses:
        "200":
          description: Success
        # responses may fall through to errors
        default:
          description: Error
  /compose/news:
    get:
      tags:
        - "NewsComposition"
      description: Retrieves all saved newsletters
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/NewsArray"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/SendEmailError"
  /compose/email:
    post:
      tags:
        - "NewsComposition"
      description: Saves a newsletter and automatically calls the emailing service to send out the newsletter to all active subscribers
      parameters:
        - name: name
          in: query
          description: Name of the newsletter author
          required: true
          type: string
        - name: content
          in: query
          description: The newsletter being sent
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SendEmailResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/SendEmailError"
  /newspage:
    get:
      tags:
        - "NewsPage"
      description: Sends out an API call to the news composition service endpoint (compose/news) to retrieve all the newsletters and renders it on the news frontend page
      responses:
        "200":
          description: Success
        # responses may fall through to errors
        default:
          description: Error
  /newspage/sendsubscription:
    post:
      tags:
        - "NewsPage"
      description: Sends out an API call to the subscription service endpoint (api/v1/subscription/subscribe) in order to register a new subscriber
      parameters:
        - name: email
          in: query
          description: Email to subscribe
          required: true
          type: string
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  SuccessRespons:
    required:
      - status
      - message
      - data
    properties:
      status:
        type: string
      message:
        type: string
      data: 
        type: object
  SuccessResponsArray:
    required:
      - status
      - message
      - data
    properties:
      status:
        type: string
      message:
        type: string
      data: 
        type: array
        items:
          $ref: "#/definitions/Subscriber"
  Subscriber:
    properties:
      _id:
        type: string
      email:
        type: string
      status:
        type: boolean
      createdAt:
        type: string
      updatedAt:
        type: string
      __v:
        type: string
  ErrorResponse:
    required:
      - status
      - message
      - error
    properties:
      status:
        type: string
      message:
        type: string
      error:
        type: string
  News:
    properties:
      _id:
        type: string
      name:
        type: string
      content:
        type: string
  NewsArray:
    type: array
    items:
      $ref: "#/definitions/News"
  SendEmailResponse:
    properties:
      message:
        type: string
  SendEmailError:
    properties:
      message:
        type: string

